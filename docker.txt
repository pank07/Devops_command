Perfect! Here's a **complete list of essential Docker commands**, from installation on Ubuntu using `apt`, all the way to managing containers, images, and Docker Hub. This is your ultimate cheat sheet 💥.
---
## 🐳 1. INSTALL DOCKER ON UBUNTU (APT METHOD)

```bash
# 1. Update system
sudo apt update
sudo apt upgrade -y

# 2. Install dependencies
sudo apt install ca-certificates curl gnupg lsb-release -y

# 3. Add Docker’s GPG key
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \
sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

# 4. Add Docker repo
echo \
"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
https://download.docker.com/linux/ubuntu \
$(lsb_release -cs) stable" | \
sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

# 5. Install Docker Engine
sudo apt update
sudo apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y

# 6. Test Docker
sudo docker version
sudo docker run hello-world
```
---
## 👤 2. RUN DOCKER AS NON-ROOT USER (Optional)

```bash
# Add your user to the docker group
sudo usermod -aG docker $USER

# Apply group change (reboot or re-login)
newgrp docker

# Test without sudo
docker run hello-world
```
---

## 📦 3. DOCKER IMAGES (Handling Images)

```bash
# List images
docker images

# Pull image from Docker Hub
docker pull ubuntu

# Remove image
docker rmi image_name_or_id

# Build image from Dockerfile
docker build -t myimage:tag .

# Tag image
docker tag myimage myusername/myimage:tag

# Push to Docker Hub
docker login
docker push myusername/myimage:tag
```
---
## 📦 4. DOCKER CONTAINERS (Handling Containers)
```bash
# Run a container (detached)
docker run -d --name mycontainer ubuntu

# Run with interactive shell
docker run -it ubuntu /bin/bash

# Run and bind port
docker run -d -p 8080:80 nginx

# List running containers
docker ps

# List all containers
docker ps -a

# Stop a container
docker stop mycontainer

# Start a container
docker start mycontainer

# Restart a container
docker restart mycontainer

# Remove a container
docker rm mycontainer

# View container logs
docker logs mycontainer

# Exec into running container
docker exec -it mycontainer bash
```
---
## 🔍 5. DOCKER SYSTEM COMMANDS
```bash
# Disk usage
docker system df

# Clean up unused containers, networks, images, build cache
docker system prune -a
```
---
## 🧰 6. DOCKER NETWORKS & VOLUMES
```bash
# List networks
docker network ls

# Create network
docker network create mynet

# Run container on custom network
docker run --network=mynet ...

# List volumes
docker volume ls

# Create volume
docker volume create myvolume

# Run container with volume
docker run -v myvolume:/data ubuntu
```
---
## 🌐 7. DOCKER HUB COMMANDS
```bash
# Login
docker login

# Logout
docker logout

# Search for images
docker search nginx

# Pull image
docker pull nginx

# Push image
docker push username/myimage
```
---
## 📜 BONUS: DOCKER COMPOSE

If installed via plugin:
```bash
# Check version
docker compose version

# Start services from docker-compose.yml
docker compose up

# Start in detached mode
docker compose up -d

# Stop services
docker compose down
```
---
Let me know if you want this as a **script** or a **PDF cheat sheet**, or need to work with **Docker in WSL** or **on Windows** — happy to help!